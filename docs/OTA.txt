[11.12.20] Nikita Borschchov

Эти два алгоритма - оба упрощенные
Детализация будет, когда будем перечислять
классы и методы


Алгоритм прошивки(упрощенный)
1. Обновляем прошивку на сервере
2. Плата проверяет наличие обновления
   и если надо, обновляется
3. Приложение проверяет состояние
   и текущую версию


Алгоритм прошивки(детальный)
---------------------
Стадия 1 - подготовка прошивки
1. Залить прошивку на сервер
2. Подтвердить новую версию
3. Сохранить старую прошивку
4. Удалить старую прошивку
---------------------
Стадия 2 - "плата слушает"
1. Запрос на сервер
   1. Прошивка старая?
   Да: игнорируем  |Можно реализовать
   Нет: пункт 2    |с помощью статус кодов
2. Скачивание прошивки (на плату)
3. Удаление старой прошивки
   3.1 Удаление старой и одновременное 
       записывание новой прошивки
               (или)
   3.2 Удаление старой и после, записывание
       новой
4. Перезапуск платы
---------------------
Стадия 3 - проверка
1. Приложение проверяет подключена ли плата
2. Приложение проверяет прошивку платы
   2.1 Плата обновлена: ура!
   2.2 Плата не обновлена, но есть обновление
   2.3 Нет обновления
--------------------

Важное примечание*
У нас несколько вариантов обновления
Они отличаются в основном, либо клиентом
(принимающей) стороной и сервром(отправляющей),
либо связующим звеном. Тип сервера не важен, при условии,
что его ответ иммутабелен.

?   - Запрос, есть ли обновление
->  - Ответ + отправка прошивки
<->  - Запрос с ожданием прошивки

1. Плата ? Сервер -> Плата 
2. Приложение ? Сервер -> Приложение -> Плата
3. Плата <-> Приложение <-> Сервер 
